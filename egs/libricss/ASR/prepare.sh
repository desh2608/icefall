#!/usr/bin/env bash
# Set bash to 'debug' mode, it will exit on :
# -e 'error', -u 'undefined variable', -o ... 'error in pipeline', -x 'print commands',
set -euo pipefail

stage=0
rttm_tag="oracle"

. ./path.sh
. shared/parse_options.sh

CORPUS_DIR=/export/fs01/LibriCSS
ENHANCED_DIR=/export/c07/draj/pb_chime5/exp/libricss_${rttm_tag}/enhanced

# This script uses pretrained LibriSpeech model to decode LibriCSS GSS-enhanced audio,
# and then compute the cpWER.
test_sets="dev test"

# All files generated by this script are saved in "data".
# You can safely remove "data" and rerun this script to regenerate it.
mkdir -p data

log() {
  # This function is from espnet
  local fname=${BASH_SOURCE[1]##*/}
  echo -e "$(date '+%Y-%m-%d %H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $*"
}

if [ $stage -le 0 ]; then
    log "Stage 0: Prepare LibriCSS enhanced data"
    python local/prepare_libricss.py --data-dir $CORPUS_DIR --enhanced-dir $ENHANCED_DIR \
        --output-dir data/manifests/libricss_${rttm_tag} --min-duration 0.1
fi

if [ $stage -le 1 ]; then
    log "Stage 1: Compute fbank features for LibriCSS enhanced data"
    utils/queue-ackgpu.pl --mem 4G --gpu 1 --config conf/gpu.conf exp/libricss_${rttm_tag}/extract_feats.log \
        python local/compute_fbank_libricss.py --data-dir data/manifests/libricss_${rttm_tag} \
            --output-dir data/fbank/libricss_${rttm_tag}
fi
